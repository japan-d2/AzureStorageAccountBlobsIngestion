{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "FunctionName": {
      "defaultValue": "StorageAccountBlobsIngestion",
      "type": "string",
      "metadata": {
        "description": "Specifies the name of the Function App."
      }
    },
    "WorkspaceId": {
      "type": "string",      
      "metadata": {
        "description": "Specifies the Azure Log Analytics Workspace Id."
      }
    },
    "WorkspaceKey": {
      "type": "securestring",      
      "metadata": {
        "description": "Specifies the Azure Log Analytics Workspace Key."
      }
    }	
  },
  "variables": {
    "FunctionName": "[concat(toLower(parameters('FunctionName')), uniqueString(resourceGroup().id), uniqueString(subscription().id))]",
	"StorageAccountName":"[concat(substring(variables('FunctionName'), 0, 20), 'sa')]",
	"KeyVaultName": "[concat(substring(variables('FunctionName'), 0, 20), 'kv')]",
	"LogAnalyticsWorkspaceKey": "LogAnalyticsWorkspaceKey",
    "StorageContainerName": "logssource",
	"StorageQueueName": "logsqueue",
	"StorageSuffix":"[environment().suffixes.storage]",
    "LogAnaltyicsUri":"[replace(environment().portal, 'https://portal', concat('https://', toLower(parameters('WorkspaceId')), '.ods.opinsights'))]",
	"EventGridSubscriptionName": "[concat(substring(variables('FunctionName'), 0, 20), 'egs')]",
	"EventGridSubscriptionTopicName": "[concat(substring(variables('FunctionName'), 0, 20), 'egt')]"
  },
  "resources": [
    {
      "type": "Microsoft.Insights/components",
      "apiVersion": "2015-05-01",
      "name": "[variables('FunctionName')]",
      "location": "[resourceGroup().location]",
      "kind": "web",
      "properties": {
        "Application_Type": "web",
        "ApplicationId": "[variables('FunctionName')]"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2019-06-01",
      "name": "[variables('StorageAccountName')]",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "Standard_LRS",
        "tier": "Standard"
      },
      "kind": "StorageV2",
      "properties": {
        "networkAcls": {
          "bypass": "AzureServices",
          "virtualNetworkRules": [
          ],
          "ipRules": [
          ],
          "defaultAction": "Allow"
        },
        "supportsHttpsTrafficOnly": true,
        "encryption": {
          "services": {
            "file": {
              "keyType": "Account",
              "enabled": true
            },
            "blob": {
              "keyType": "Account",
              "enabled": true
            }
          },
          "keySource": "Microsoft.Storage"
        }
      }
    },	
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2018-02-01",
      "name": "[variables('FunctionName')]",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "Y1",
        "tier": "Dynamic"
      },
      "kind": "functionapp",
      "properties": {
        "name": "[variables('FunctionName')]",
        "workerSize": "0",
        "workerSizeId": "0",
        "numberOfWorkers": "1"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices",
      "apiVersion": "2019-06-01",
      "name": "[concat(variables('StorageAccountName'), '/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', tolower(variables('StorageAccountName')))]"
      ],
      "sku": {
        "name": "Standard_LRS",
        "tier": "Standard"
      },
      "properties": {
        "cors": {
          "corsRules": [
          ]
        },
        "deleteRetentionPolicy": {
          "enabled": false
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/fileServices",
      "apiVersion": "2019-06-01",
      "name": "[concat(variables('StorageAccountName'), '/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', tolower(variables('StorageAccountName')))]"
      ],
      "sku": {
        "name": "Standard_LRS",
        "tier": "Standard"
      },
      "properties": {
        "cors": {
          "corsRules": [
          ]
        }
      }
    },
	{
      "type": "Microsoft.Storage/storageAccounts/queueServices",
      "apiVersion": "2019-06-01",
      "name": "[concat(variables('StorageAccountName'), '/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', tolower(variables('StorageAccountName')))]"
      ],
      "sku": {
        "name": "Standard_LRS",
        "tier": "Standard"
      },
      "properties": {
        "cors": {
          "corsRules": [
          ]
        }
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2018-11-01",
      "name": "[variables('FunctionName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', tolower(variables('StorageAccountName')))]",
        "[resourceId('Microsoft.Insights/components', variables('FunctionName'))]"
      ],
      "kind": "functionapp,linux",
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "name": "[variables('FunctionName')]",
        "httpsOnly": true,
        "clientAffinityEnabled": true,
        "alwaysOn": true,
        "reserved": true,
        "siteConfig": {
          "linuxFxVersion": "python|3.8"
        }
      },
      "resources": [
        {
          "apiVersion": "2018-11-01",
          "type": "config",
          "name": "appsettings",		  
          "dependsOn": [
            "[concat('Microsoft.Web/sites/', variables('FunctionName'))]",                        
            "[resourceId('Microsoft.KeyVault/vaults/secrets', variables('KeyVaultName'), variables('LogAnalyticsWorkspaceKey'))]"
          ],
          "properties": {
            "FUNCTIONS_EXTENSION_VERSION": "~3",
            "FUNCTIONS_WORKER_RUNTIME": "python",			
            "APPINSIGHTS_INSTRUMENTATIONKEY": "[reference(resourceId('Microsoft.insights/components', variables('FunctionName')), '2015-05-01').InstrumentationKey]",
            "APPLICATIONINSIGHTS_CONNECTION_STRING": "[reference(resourceId('microsoft.insights/components', variables('FunctionName')), '2015-05-01').ConnectionString]",
            "AzureWebJobsStorage": "[concat('DefaultEndpointsProtocol=https;AccountName=', toLower(variables('StorageAccountName')),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', toLower(variables('StorageAccountName'))), '2019-06-01').keys[0].value, ';EndpointSuffix=',toLower(variables('StorageSuffix')))]",
            "WorkspaceId": "[parameters('WorkspaceId')]",
            "WorkspaceKey": "[concat('@Microsoft.KeyVault(SecretUri=', reference(variables('LogAnalyticsWorkspaceKey')).secretUriWithVersion, ')')]",			
            "LATableName": "Auth0Logs",
            "StorageQueueName": "variables('StorageQueueName')",
            "LAURI": "[variables('LogAnaltyicsUri')]",			
            "WEBSITE_RUN_FROM_PACKAGE": "https://github.com/nevermoe/AzureStorageAccountBlobsIngestion/raw/main/StorageAccountBlobsIngestion/AzureFunctionBlobsIngestion.zip"
          }
        }
      ]      
    },
    {
      "type": "Microsoft.KeyVault/vaults",
      "apiVersion": "2016-10-01",
      "name": "[variables('KeyVaultName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('FunctionName'))]"
      ],
      "properties": {
        "sku": {
          "family": "A",
          "name": "Standard"
        },
        "tenantId": "[subscription().tenantId]",
        "accessPolicies": [
          {
            "tenantId": "[subscription().tenantId]",
            "objectId": "[reference(resourceId('Microsoft.Web/sites', variables('FunctionName')),'2019-08-01', 'full').identity.principalId]",
            "permissions": {
              "secrets": [ "get",
                           "list"
              ]
            }
          }
        ],
        "enabledForDeployment": false,
        "enabledForDiskEncryption": false,
        "enabledForTemplateDeployment": true,
        "enableSoftDelete": true
      },
      "resources": [       
        {
          "type": "secrets",
          "apiVersion": "2016-10-01",
          "name": "[variables('LogAnalyticsWorkspaceKey')]",
          "dependsOn": [
            "[resourceId('Microsoft.KeyVault/vaults/', variables('KeyVaultName'))]"
          ],
          "properties": {
            "value": "[parameters('WorkspaceKey')]",
            "contentType": "string",
            "attributes": {
              "enabled": true
            }
          }
        }
      ]
    },    
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2019-06-01",
      "name": "[concat(variables('StorageAccountName'), '/default/azure-webjobs-hosts')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('StorageAccountName'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('StorageAccountName'))]"
      ],
      "properties": {
        "publicAccess": "None"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2019-06-01",
      "name": "[concat(variables('StorageAccountName'), '/default/azure-webjobs-secrets')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('StorageAccountName'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('StorageAccountName'))]"
      ],
      "properties": {
        "publicAccess": "None"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2019-06-01",
      "name": "[concat(variables('StorageAccountName'), concat('/default/', variables('StorageContainerName')))]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('StorageAccountName'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('StorageAccountName'))]"
      ],
      "properties": {
        "publicAccess": "None"
      }
    },
	{
      "type": "Microsoft.Storage/storageAccounts/queueServices/queues",
      "apiVersion": "2019-06-01",
      "name": "[concat(variables('StorageAccountName'), concat('/default/', variables('StorageQueueName')))]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/queueServices', variables('StorageAccountName'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('StorageAccountName'))]"
      ],
      "properties": {
        "publicAccess": "None"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/fileServices/shares",
      "apiVersion": "2019-06-01",
      "name": "[concat(variables('StorageAccountName'), '/default/', tolower(variables('StorageAccountName')))]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/fileServices', variables('StorageAccountName'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('StorageAccountName'))]"
      ],
      "properties": {
        "shareQuota": 5120
      }
    },
	{
      "type": "Microsoft.EventGrid/systemTopics",
      "apiVersion": "2020-04-01-preview",
      "name": "[variables('EventGridSubscriptionTopicName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('StorageAccountName'))]"
      ],
      "properties": {
        "source": "[resourceId('Microsoft.Storage/storageAccounts', variables('StorageAccountName'))]",
        "topicType": "Microsoft.Storage.StorageAccounts"
      }
    },	
	{
    "type": "Microsoft.Storage/storageAccounts/providers/eventSubscriptions",
    "name": "[concat(variables('storageAccountName'), '/Microsoft.EventGrid/', variables('EventGridSubscriptionTopicName'))]",
    "apiVersion": "2020-01-01-preview",
    "dependsOn": [
        "[variables('storageAccountName')]"
    ],
    "properties": {
        "destination": {
           "endpointType": "StorageQueue",
          "properties": {
            "resourceId": "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
            "queueName": "[variables('StorageQueueName')]"
          }
        },
        "eventDeliverySchema": "EventGridSchema",
		"filter": {
		  "includedEventTypes": [
			"Microsoft.Storage.BlobCreated"            
		  ]
		}	
    }
}
  ]
}
